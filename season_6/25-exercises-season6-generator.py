# ================================== 1 ======================================================
# رفتار enumerate را با استفاده از ژنراتور پیاده سازی کنید

# --------------------------------------------------
# l = ['a', 'b', 'c', 'd']
#
# for i in range(len(l)):
#     print(i, l[i])
# --------------------------------------------------
# l = ['a', 'b', 'c', 'd']
#
# for i, j in enumerate(l):
#     print(f"{i}: {j}")
# --------------------------------------------------
# def my_enumerate(secuence, start=0):
#     c = start
#     for i in secuence:
#         yield c, i
#         c += 1
#
#
# for i, j in my_enumerate(['a', 'b', 'c', 'd'], 0):
#     print(f"{i}: {j}")
# --------------------------------------------------

# ================================== 2 ======================================================
# یک ژنراتور برای تولید دنباله فیبوناتچی بنویسید.
# 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, ...

# --------------------------------------------------
# def fibonacci():
#     f1 = 0
#     yield f1
#     f2 = 1
#     yield f2
#     while True:
#         f3 = f1 + f2
#         yield f3
#         f1 = f2
#         f2 = f3
#
#
# fib = fibonacci()
# for _ in range(10):
#     print(next(fib))
# --------------------------------------------------

# ================================== 3 ======================================================
# ژنراتوری بنویسید که یک لیست گرفته و جمع عناصر آن را برگراند. ( هربار یک عنصر جدید جمع شود)
# مثال : لیست [1,2,3,4,5] را داریم. ژنراتور باید اولین بار 1، دومین بار 1 2، سومین بار 1 2 3 و… را برگرداند.

# --------------------------------------------------
# def sum_gen(lst):
#     s = 0
#     for i in lst:
#         s += i
#         yield s
#
#
# sg = sum_gen([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
# for i in sg:
#     print(i)
# --------------------------------------------------

# ================================== 4 ======================================================
# ژنراتوری بنویسید که یک رشته گرفته و معکوس آن را برگرداند.(هر بار یک کاراکتر)

# --------------------------------------------------
# def rev_str(s):
#     l = len(s)
#     for i in range(l-1, -1, -1):
#         yield s[i]
#
#
# sg = rev_str('danial sadri')
# for ch in sg:
#     print(ch)
# --------------------------------------------------

# ================================== 5 ======================================================
# یک ژنراتور بی نهایت از اعداد زوج یا فرد بنوییسید. زوج یا فرد بودن توسط کاربر تعیین میشود.

# --------------------------------------------------
# def my_generator(even_or_odd='e'):
#     c = 0
#     if even_or_odd == 'o':
#         c = 1
#
#     while True:
#         yield c
#         c += 2
#
#
# eo = my_generator('e')
# for _ in range(10):
#     print(next(eo))
# --------------------------------------------------

# ================================== 6 ======================================================
# ژنراتوری ایجاد کنید که در هر مرحله، خروجی های زیر را تولید کند:
# بار اول : 1
# بار دوم: 2 2
# بار سوم: 3 3 3
# و ….

# --------------------------------------------------
# def num_gen():
#     c = 1
#     while True:
#         s = ""
#         for i in range(1, c+1):
#             s += f"{c}\t"
#         yield s
#         c += 1
#
#
# n = num_gen()
# for _ in range(10):
#     print(next(n))
# --------------------------------------------------

# ===========================================================================================
