# duck typing ==> یک ابجکت رو بر اساس متد و اتریبیوت ها و رفتارش قضاوت میکنیم و نه چیزی که واقعا هست یعی نوع شی
# داک تایپینگ ممکنه یه مشکلاتی برای ما ایجاد بکنه مثلا مثل پایینی ممکنه ابجکتی داشته باشم که همچین متدی رو نداشته باشه و باعث خطا بشه
# برای کنترل کردن این نوع خطا ها دو تا مفهوم تعریف شده LBYL & EAFP


# ======================= len  ==============================================================
# برای من مهم نیست که تو چه ابجکتی هستی تا زمانی متدی به این اسم داشته باشی همتون برای من مثل هم هستین و همتون رو به یک چشم میبینم
# s = "mohammad"
# t = (1, 2, 3, 4, 5)
# lst = [523, 45, 324, 5, 4325]
#
# print(len(s))
# print(len(t))
# print(len(lst))
# print(len(5))
# ============================================================================================


# ======================= LBYL  ==============================================================
"""
LBYL ==> look before you leap ==>  بی گدار به اب نزدن  یا  اول اندیشه بعد گفتار  یعنی قبل اینکه کاری رو انجام بدی اول بررسی کن
 مثلا یک متدی رو صدا بزنی اول بررسی کن ببین اگه وجود اره این کار رو بکن اگه وجود نداره که هیچ
"""

# ----------------------------------------------------
# def check_len(obj):
#     if "__len__" in dir(obj):
#         print(len(obj))
#     else:
#         print('Im sorry')
#
#
# check_len([5, 6])
#
# def check_len(obj):
#     if hasattr(obj, "__len__"):
#         print(len(obj))
#     else:
#         print('Im sorry')
#
#
# check_len([4, 5, 7])
# -------------------------------------------------------
# d = {'aj': 1, 'b': 2, 'c': 3}
#
# if 'a' in d.keys():
#     print(d['a'])
# else:
#     print('Im sorry')
# -------------------------------------------------------

# =============================================================================================


# ======================= EAFP  ===============================================================
"""
EAFP ==> it's easier to ask for forgiveness than permission ==> طلب بخشش راحت تر از اجازه گرفتن هست 
یعنی نیاز نیست بیای همون اول چک کنی بررسی کنی تو کارتو انجام بده اگه درست کار کرد که اوکیه و اگر درست کار نکرد بعد بیا معذرت خواهی کن 
"""


# ----------------------------------------------------
# def check_len(obj):
#     try:
#         print(len(obj))
#     except (TypeError, NameError):
#         print('Im sorry')
#
#
# check_len('vasfv')
# ----------------------------------------------------
# d = {'a': 1, 'b': 2, 'c': 3}
#
# try:
#     print(d['a'])
# except:
#     print('Im sorry')
# ----------------------------------------------------
# d = {'a': 1, 'b': 2, 'c': 3}
# print(d.get('a'))
# ----------------------------------------------------

# ==============================================================================================


# ========================================  duck typing  ========================================

# ----------------------------------------------------
# class Duck:
#     def move(self):
#         print('I am swimming...')
#
#
# class Person:
#     def move(self):
#         print('I am walking...')
#
#
# class Plane:
#     def move(self):
#         print('I am flying...')
#
#
# duck = Duck()
# person = Person()
# plane = Plane()
#
#
# def function(obj):
#     obj.move()
#
#
# function(duck)
# function(person)
# function(plane)
# ----------------------------------------------------

# ==============================================================================================
